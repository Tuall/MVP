{
  "folders": [
    {
      "requests": [
        {
          "v": "1",
          "endpoint": "<<host>>/api/items/<<item_id>>",
          "name": "Get item",
          "params": [],
          "headers": [
            { "active": true, "value": "application/json", "key": "accept" }
          ],
          "method": "GET",
          "auth": {
            "authType": "none",
            "addTo": "Headers",
            "authActive": true,
            "value": "",
            "key": ""
          },
          "preRequestScript": "",
          "testScript": "// Check status code is 2xx\npw.test(\"Status code is 2xx\", ()=> {\n    pw.expect(pw.response.status).toBeLevel2xx();\n});\n\n// Check JSON response property\npw.test(\"Check JSON response property\", ()=> {\n    pw.expect(pw.response.body.person_id).toBeType(\"number\");\n    pw.expect(pw.response.body.status).toBeType(\"number\");\n});",
          "body": { "contentType": null, "body": null }
        },
        {
          "v": "1",
          "endpoint": "<<host>>/api/items/<<notfound_item_id>>",
          "name": "Get item (404 - Item not found)",
          "params": [],
          "headers": [
            { "key": "accept", "value": "application/json", "active": true }
          ],
          "method": "GET",
          "auth": { "authType": "none", "authActive": true },
          "preRequestScript": "",
          "testScript": "// Check status code is 404\npw.test(\"Status code is 404\", ()=> {\n    pw.expect(pw.response.status).toBe(404);\n});",
          "body": { "body": null, "contentType": null }
        },
        {
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "auth": { "authActive": true, "authType": "none" },
          "preRequestScript": "",
          "params": [],
          "body": { "body": null, "contentType": null },
          "name": "Get item (400 - Invalid ID)",
          "v": "1",
          "endpoint": "<<host>>/api/items/<<invalid_id>>",
          "method": "GET",
          "headers": [
            { "key": "accept", "active": true, "value": "application/json" }
          ]
        },
        {
          "v": "1",
          "endpoint": "<<host>>/api/items",
          "name": "Create item",
          "params": [],
          "headers": [
            { "key": "accept", "active": true, "value": "application/json" }
          ],
          "method": "POST",
          "auth": { "authType": "none", "authActive": true },
          "preRequestScript": "",
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});\n\n// Check JSON response property\npw.test(\"Check JSON response property\", ()=> {\n    pw.expect(pw.response.body.id).toBeType(\"number\");\n});",
          "body": {
            "body": "{\n    \"text\": \"some text\"\n}",
            "contentType": "application/json"
          }
        },
        {
          "name": "Create item (400 - Invalid attributes)",
          "endpoint": "<<host>>/api/items",
          "method": "POST",
          "auth": { "authActive": true, "authType": "none" },
          "params": [],
          "preRequestScript": "",
          "v": "1",
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "body": {
            "contentType": "application/json",
            "body": "{\n    \"invalid\": \"something\"\n}"
          },
          "headers": [
            { "value": "application/json", "active": true, "key": "accept" }
          ]
        },
        {
          "v": "1",
          "endpoint": "<<host>>/api/items/<<item_id>>",
          "name": "Update item",
          "params": [],
          "headers": [
            { "active": true, "value": "application/json", "key": "accept" }
          ],
          "method": "PUT",
          "auth": { "authActive": true, "authType": "none" },
          "preRequestScript": "",
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});\n\n\n// Check JSON response property\npw.test(\"Check JSON response property\", ()=> {\n    pw.expect(pw.response.body.person_id).toBeType(\"number\");\n    pw.expect(pw.response.body.status).toBeType(\"number\");\n});",
          "body": {
            "body": "{\n    \"text\": \"new updated text\"\n}",
            "contentType": "application/json"
          }
        },
        {
          "preRequestScript": "",
          "params": [],
          "body": {
            "contentType": "application/json",
            "body": "{\n    \"text\": \"new updated text\"\n}"
          },
          "v": "1",
          "name": "Update item (404 - Item not found)",
          "headers": [
            { "active": true, "value": "application/json", "key": "accept" }
          ],
          "method": "PUT",
          "auth": { "authType": "none", "authActive": true },
          "endpoint": "<<host>>/api/items/<<notfound_item_id>>",
          "testScript": "// Check status code is 404\npw.test(\"Status code is 404\", ()=> {\n    pw.expect(pw.response.status).toBe(404);\n});"
        },
        {
          "v": "1",
          "method": "PUT",
          "body": {
            "contentType": "application/json",
            "body": "{\n    \"invalid\": \"invalid\"\n}"
          },
          "endpoint": "<<host>>/api/items/<<item_id>>",
          "headers": [
            { "active": true, "key": "accept", "value": "application/json" }
          ],
          "params": [],
          "preRequestScript": "",
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "name": "Update item (400 - Invalid attributes)",
          "auth": { "authActive": true, "authType": "none" }
        }
      ],
      "name": "Items",
      "v": 1,
      "folders": []
    },
    {
      "v": 1,
      "folders": [],
      "name": "Timers",
      "requests": [
        {
          "body": { "body": null, "contentType": null },
          "method": "GET",
          "name": "Get timers",
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});",
          "preRequestScript": "",
          "v": "1",
          "auth": { "authType": "none", "authActive": true },
          "params": [],
          "headers": [
            { "key": "accept", "active": true, "value": "application/json" }
          ],
          "endpoint": "<<host>>/api/items/<<timer_id>>/timers"
        },
        {
          "auth": { "authActive": true, "authType": "none" },
          "headers": [
            { "key": "accept", "active": true, "value": "application/json" }
          ],
          "endpoint": "<<host>>/api/items/<<item_id>>/timers/<<timer_id>>",
          "preRequestScript": "",
          "name": "Get timer",
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});",
          "body": { "contentType": null, "body": null },
          "params": [],
          "v": "1",
          "method": "GET"
        },
        {
          "headers": [
            { "active": true, "value": "application/json", "key": "accept" }
          ],
          "method": "GET",
          "name": "Get timer (404 - Timer not found)",
          "auth": { "authType": "none", "authActive": true },
          "params": [],
          "v": "1",
          "body": { "contentType": null, "body": null },
          "testScript": "// Check status code is 404\npw.test(\"Status code is 404\", ()=> {\n    pw.expect(pw.response.status).toBe(404);\n});",
          "preRequestScript": "",
          "endpoint": "<<host>>/api/items/<<item_id>>/timers/<<notfound_timer_id>>"
        },
        {
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "endpoint": "<<host>>/api/items/<<item_id>>/timers/<<invalid_id>>",
          "v": "1",
          "method": "GET",
          "body": { "contentType": null, "body": null },
          "auth": { "authType": "none", "authActive": true },
          "params": [],
          "preRequestScript": "",
          "headers": [
            { "value": "application/json", "key": "accept", "active": true }
          ],
          "name": "Get timer (400 - Invalid ID)"
        },
        {
          "endpoint": "<<host>>/api/items/<<item_id>>/timers",
          "headers": [
            { "key": "accept", "value": "application/json", "active": true }
          ],
          "body": {
            "body": "{\n    \"start\": \"2023-01-11T17:40:44\"\n}",
            "contentType": "application/json"
          },
          "preRequestScript": "",
          "v": "1",
          "name": "Create timer (custom start)",
          "auth": { "authActive": true, "authType": "none" },
          "method": "POST",
          "params": [],
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});\n\n// Check JSON response property\npw.test(\"Check JSON response property\", ()=> {\n    pw.expect(pw.response.body.id).toBeType(\"number\");\n});"
        },
        {
          "auth": { "authActive": true, "authType": "none" },
          "endpoint": "<<host>>/api/items/<<item_id>>/timers",
          "v": "1",
          "method": "POST",
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});\n\n\n// Check JSON response property\npw.test(\"Check JSON response property\", ()=> {\n    pw.expect(pw.response.body.id).toBeType(\"number\");\n});",
          "params": [],
          "name": "Create timer (no start)",
          "preRequestScript": "",
          "headers": [
            { "key": "accept", "active": true, "value": "application/json" }
          ],
          "body": { "contentType": null, "body": null }
        },
        {
          "headers": [
            { "key": "accept", "value": "application/json", "active": true }
          ],
          "endpoint": "<<host>>/api/items/<<item_id>>/timers",
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "params": [],
          "v": "1",
          "body": {
            "body": "{\n    \"start\": \"2023-01-11T17:40:44\",\n    \"stop\": \"2023-01-11T17:40:40\"\n}",
            "contentType": "application/json"
          },
          "name": "Create timer (400 - Stop is after start) ",
          "method": "POST",
          "auth": { "authType": "none", "authActive": true },
          "preRequestScript": ""
        },
        {
          "name": "Create timer (400 - Invalid date format) ",
          "body": {
            "contentType": "application/json",
            "body": "{\n    \"start\": \"2023-invalid-01\"\n}"
          },
          "headers": [
            { "active": true, "value": "application/json", "key": "accept" }
          ],
          "params": [],
          "method": "POST",
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "v": "1",
          "endpoint": "<<host>>/api/items/<<item_id>>/timers",
          "preRequestScript": "",
          "auth": { "authType": "none", "authActive": true }
        },
        {
          "v": "1",
          "endpoint": "<<host>>/api/items/<<item_id>>/timers/<<timer_id>>",
          "name": "Update timer",
          "params": [],
          "headers": [
            { "active": true, "key": "accept", "value": "application/json" }
          ],
          "method": "PUT",
          "auth": { "authType": "none", "authActive": true },
          "preRequestScript": "",
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});\n\n// Check JSON response property\npw.test(\"Check JSON response property\", ()=> {\n    pw.expect(pw.response.body.start).toBeType(\"string\");\n    pw.expect(pw.response.body.stop).toBeType(\"string\");\n});",
          "body": {
            "contentType": "application/json",
            "body": "{\n    \"start\": \"2023-01-11T17:40:44\",\n    \"stop\": \"2023-01-11T17:40:48\"\n}"
          }
        },
        {
          "preRequestScript": "",
          "endpoint": "<<host>>/api/items/<<item_id>>/timers/<<timer_id>>",
          "params": [],
          "v": "1",
          "headers": [
            { "active": true, "value": "application/json", "key": "accept" }
          ],
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "body": {
            "body": "{\n    \"start\": \"2023-invalid-01\"\n}",
            "contentType": "application/json"
          },
          "name": "Update timer (400 - Invalid date format)",
          "method": "PUT",
          "auth": { "authType": "none", "authActive": true }
        },
        {
          "preRequestScript": "",
          "endpoint": "<<host>>/api/items/<<item_id>>/timers/<<timer_id>>",
          "body": {
            "contentType": "application/json",
            "body": "{\n    \"start\": \"2023-01-11T17:40:44\",\n    \"stop\": \"2023-01-11T17:40:40\"\n}"
          },
          "auth": { "authActive": true, "authType": "none" },
          "headers": [
            { "key": "accept", "active": true, "value": "application/json" }
          ],
          "v": "1",
          "testScript": "// Check status code is 400\npw.test(\"Status code is 400\", ()=> {\n    pw.expect(pw.response.status).toBe(400);\n});",
          "name": "Update timer (400 - Stop is after start)",
          "params": [],
          "method": "PUT"
        },
        {
          "name": "Stop timer",
          "method": "PUT",
          "auth": { "authType": "none", "authActive": true },
          "params": [],
          "v": "1",
          "testScript": "// Check status code is 200\npw.test(\"Status code is 200\", ()=> {\n    pw.expect(pw.response.status).toBe(200);\n});",
          "headers": [
            { "key": "accept", "value": "application/json", "active": true }
          ],
          "body": { "body": null, "contentType": null },
          "preRequestScript": "",
          "endpoint": "<<host>>/api/timers/<<timer_id_to_stop>>"
        },
        {
          "preRequestScript": "",
          "headers": [
            { "active": true, "key": "accept", "value": "application/json" }
          ],
          "endpoint": "<<host>>/api/timers/<<timer_id>>",
          "body": { "body": null, "contentType": null },
          "method": "PUT",
          "name": "Stop timer (403 - Timer has already been stopped)",
          "v": "1",
          "params": [],
          "testScript": "\n\n// Check status code is 403\npw.test(\"Status code is 403\", ()=> {\n    pw.expect(pw.response.status).toBe(403);\n});",
          "auth": { "authType": "none", "authActive": true }
        },
        {
          "preRequestScript": "",
          "body": { "contentType": null, "body": null },
          "v": "1",
          "method": "PUT",
          "name": "Stop timer (404 - Timer not found)",
          "endpoint": "<<host>>/api/timers/<<notfound_timer_id>>",
          "auth": { "authActive": true, "authType": "none" },
          "testScript": "// Check status code is 404\npw.test(\"Status code is 404\", ()=> {\n    pw.expect(pw.response.status).toBe(404);\n});",
          "headers": [
            { "value": "application/json", "key": "accept", "active": true }
          ],
          "params": []
        }
      ]
    }
  ],
  "v": 1,
  "name": "MVP",
  "requests": []
}
